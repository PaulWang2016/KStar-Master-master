//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace aZaaS.KStar.Web.TenantManager
{
    using System.Runtime.Serialization;
    using System;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "TenantEntity", Namespace = "http://schemas.datacontract.org/2004/07/aZaaS.Workflow.WcfService.Model")]
    [System.SerializableAttribute()]
    public partial class TenantEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BelongCompIDField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactMobileField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPhoneField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPositionField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledFlagField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpireDateField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenantIDField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenantNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedDateField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adress
        {
            get
            {
                return this.AdressField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AdressField, value) != true))
                {
                    this.AdressField = value;
                    this.RaisePropertyChanged("Adress");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BelongCompID
        {
            get
            {
                return this.BelongCompIDField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BelongCompIDField, value) != true))
                {
                    this.BelongCompIDField = value;
                    this.RaisePropertyChanged("BelongCompID");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactMobile
        {
            get
            {
                return this.ContactMobileField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ContactMobileField, value) != true))
                {
                    this.ContactMobileField = value;
                    this.RaisePropertyChanged("ContactMobile");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPerson
        {
            get
            {
                return this.ContactPersonField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ContactPersonField, value) != true))
                {
                    this.ContactPersonField = value;
                    this.RaisePropertyChanged("ContactPerson");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone
        {
            get
            {
                return this.ContactPhoneField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true))
                {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPosition
        {
            get
            {
                return this.ContactPositionField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ContactPositionField, value) != true))
                {
                    this.ContactPositionField = value;
                    this.RaisePropertyChanged("ContactPosition");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy
        {
            get
            {
                return this.CreatedByField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true))
                {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate
        {
            get
            {
                return this.CreatedDateField;
            }
            set
            {
                if ((this.CreatedDateField.Equals(value) != true))
                {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnabledFlag
        {
            get
            {
                return this.EnabledFlagField;
            }
            set
            {
                if ((this.EnabledFlagField.Equals(value) != true))
                {
                    this.EnabledFlagField = value;
                    this.RaisePropertyChanged("EnabledFlag");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpireDate
        {
            get
            {
                return this.ExpireDateField;
            }
            set
            {
                if ((this.ExpireDateField.Equals(value) != true))
                {
                    this.ExpireDateField = value;
                    this.RaisePropertyChanged("ExpireDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax
        {
            get
            {
                return this.FaxField;
            }
            set
            {
                if ((object.ReferenceEquals(this.FaxField, value) != true))
                {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                if ((this.IDField.Equals(value) != true))
                {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode
        {
            get
            {
                return this.PostCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true))
                {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                if ((this.StatusField.Equals(value) != true))
                {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenantID
        {
            get
            {
                return this.TenantIDField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TenantIDField, value) != true))
                {
                    this.TenantIDField = value;
                    this.RaisePropertyChanged("TenantID");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenantName
        {
            get
            {
                return this.TenantNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TenantNameField, value) != true))
                {
                    this.TenantNameField = value;
                    this.RaisePropertyChanged("TenantName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy
        {
            get
            {
                return this.UpdatedByField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true))
                {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedDate
        {
            get
            {
                return this.UpdatedDateField;
            }
            set
            {
                if ((this.UpdatedDateField.Equals(value) != true))
                {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "TenantManager.ITenantManager")]
    public interface ITenantManager
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/ActiveKstarAccount", ReplyAction = "http://tempuri.org/ITenantManager/ActiveKstarAccountResponse")]
        string ActiveKstarAccount(string tenantCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/ActiveKstarAccount", ReplyAction = "http://tempuri.org/ITenantManager/ActiveKstarAccountResponse")]
        System.Threading.Tasks.Task<string> ActiveKstarAccountAsync(string tenantCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/ActiveAzaaSAccount", ReplyAction = "http://tempuri.org/ITenantManager/ActiveAzaaSAccountResponse")]
        string ActiveAzaaSAccount(string tenantCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/ActiveAzaaSAccount", ReplyAction = "http://tempuri.org/ITenantManager/ActiveAzaaSAccountResponse")]
        System.Threading.Tasks.Task<string> ActiveAzaaSAccountAsync(string tenantCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/DestroyKstarAccount", ReplyAction = "http://tempuri.org/ITenantManager/DestroyKstarAccountResponse")]
        string DestroyKstarAccount(string tenantCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/DestroyKstarAccount", ReplyAction = "http://tempuri.org/ITenantManager/DestroyKstarAccountResponse")]
        System.Threading.Tasks.Task<string> DestroyKstarAccountAsync(string tenantCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/DestroyAzaaSAccount", ReplyAction = "http://tempuri.org/ITenantManager/DestroyAzaaSAccountResponse")]
        string DestroyAzaaSAccount(string tenantCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/DestroyAzaaSAccount", ReplyAction = "http://tempuri.org/ITenantManager/DestroyAzaaSAccountResponse")]
        System.Threading.Tasks.Task<string> DestroyAzaaSAccountAsync(string tenantCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/TenantInfoQuery", ReplyAction = "http://tempuri.org/ITenantManager/TenantInfoQueryResponse")]
        aZaaS.KStar.Web.TenantManager.TenantEntity TenantInfoQuery(string tenantCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/TenantInfoQuery", ReplyAction = "http://tempuri.org/ITenantManager/TenantInfoQueryResponse")]
        System.Threading.Tasks.Task<aZaaS.KStar.Web.TenantManager.TenantEntity> TenantInfoQueryAsync(string tenantCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/TenantInfoAllQuery", ReplyAction = "http://tempuri.org/ITenantManager/TenantInfoAllQueryResponse")]
        aZaaS.KStar.Web.TenantManager.TenantEntity[] TenantInfoAllQuery();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/TenantInfoAllQuery", ReplyAction = "http://tempuri.org/ITenantManager/TenantInfoAllQueryResponse")]
        System.Threading.Tasks.Task<aZaaS.KStar.Web.TenantManager.TenantEntity[]> TenantInfoAllQueryAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/TenantInfoAdd", ReplyAction = "http://tempuri.org/ITenantManager/TenantInfoAddResponse")]
        string TenantInfoAdd(aZaaS.KStar.Web.TenantManager.TenantEntity tenantEntity);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/TenantInfoAdd", ReplyAction = "http://tempuri.org/ITenantManager/TenantInfoAddResponse")]
        System.Threading.Tasks.Task<string> TenantInfoAddAsync(aZaaS.KStar.Web.TenantManager.TenantEntity tenantEntity);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/TenantInfoModify", ReplyAction = "http://tempuri.org/ITenantManager/TenantInfoModifyResponse")]
        string TenantInfoModify(aZaaS.KStar.Web.TenantManager.TenantEntity tenantEntity);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITenantManager/TenantInfoModify", ReplyAction = "http://tempuri.org/ITenantManager/TenantInfoModifyResponse")]
        System.Threading.Tasks.Task<string> TenantInfoModifyAsync(aZaaS.KStar.Web.TenantManager.TenantEntity tenantEntity);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITenantManagerChannel : aZaaS.KStar.Web.TenantManager.ITenantManager, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TenantManagerClient : System.ServiceModel.ClientBase<aZaaS.KStar.Web.TenantManager.ITenantManager>, aZaaS.KStar.Web.TenantManager.ITenantManager
    {

        public TenantManagerClient()
        {
        }

        public TenantManagerClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public TenantManagerClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public TenantManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public TenantManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public string ActiveKstarAccount(string tenantCode)
        {
            return base.Channel.ActiveKstarAccount(tenantCode);
        }

        public System.Threading.Tasks.Task<string> ActiveKstarAccountAsync(string tenantCode)
        {
            return base.Channel.ActiveKstarAccountAsync(tenantCode);
        }

        public string ActiveAzaaSAccount(string tenantCode)
        {
            return base.Channel.ActiveAzaaSAccount(tenantCode);
        }

        public System.Threading.Tasks.Task<string> ActiveAzaaSAccountAsync(string tenantCode)
        {
            return base.Channel.ActiveAzaaSAccountAsync(tenantCode);
        }

        public string DestroyKstarAccount(string tenantCode)
        {
            return base.Channel.DestroyKstarAccount(tenantCode);
        }

        public System.Threading.Tasks.Task<string> DestroyKstarAccountAsync(string tenantCode)
        {
            return base.Channel.DestroyKstarAccountAsync(tenantCode);
        }

        public string DestroyAzaaSAccount(string tenantCode)
        {
            return base.Channel.DestroyAzaaSAccount(tenantCode);
        }

        public System.Threading.Tasks.Task<string> DestroyAzaaSAccountAsync(string tenantCode)
        {
            return base.Channel.DestroyAzaaSAccountAsync(tenantCode);
        }

        public aZaaS.KStar.Web.TenantManager.TenantEntity TenantInfoQuery(string tenantCode)
        {
            return base.Channel.TenantInfoQuery(tenantCode);
        }

        public System.Threading.Tasks.Task<aZaaS.KStar.Web.TenantManager.TenantEntity> TenantInfoQueryAsync(string tenantCode)
        {
            return base.Channel.TenantInfoQueryAsync(tenantCode);
        }

        public aZaaS.KStar.Web.TenantManager.TenantEntity[] TenantInfoAllQuery()
        {
            return base.Channel.TenantInfoAllQuery();
        }

        public System.Threading.Tasks.Task<aZaaS.KStar.Web.TenantManager.TenantEntity[]> TenantInfoAllQueryAsync()
        {
            return base.Channel.TenantInfoAllQueryAsync();
        }

        public string TenantInfoAdd(aZaaS.KStar.Web.TenantManager.TenantEntity tenantEntity)
        {
            return base.Channel.TenantInfoAdd(tenantEntity);
        }

        public System.Threading.Tasks.Task<string> TenantInfoAddAsync(aZaaS.KStar.Web.TenantManager.TenantEntity tenantEntity)
        {
            return base.Channel.TenantInfoAddAsync(tenantEntity);
        }

        public string TenantInfoModify(aZaaS.KStar.Web.TenantManager.TenantEntity tenantEntity)
        {
            return base.Channel.TenantInfoModify(tenantEntity);
        }

        public System.Threading.Tasks.Task<string> TenantInfoModifyAsync(aZaaS.KStar.Web.TenantManager.TenantEntity tenantEntity)
        {
            return base.Channel.TenantInfoModifyAsync(tenantEntity);
        }
    }
}
